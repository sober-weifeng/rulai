<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rulai.spider.mapper.ChinacaipuOtherCookbookDetailMapper">

    <resultMap id="BaseResultMap" type="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
        <result column="cookbook_url" jdbcType="VARCHAR" property="cookbookUrl" />
        <result column="cookbook_name" jdbcType="VARCHAR" property="cookbookName" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="author" jdbcType="VARCHAR" property="author" />
        <result column="edit_time" jdbcType="VARCHAR" property="editTime" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="cover_picture" jdbcType="VARCHAR" property="coverPicture" />
        <result column="detail" jdbcType="VARCHAR" property="detail" />
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                AND ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                AND ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                AND ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    AND ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    AND ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    AND ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,gmt_create,gmt_update,cookbook_url,cookbook_name,title,author,edit_time,description,cover_picture,detail
    </sql>

    <select id="countByQuery" parameterType="com.rulai.spider.bean.query.ChinacaipuOtherCookbookDetailQuery" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM chinacaipu_other_cookbook_detail
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>
    
    <select id="countByPrimaryKey" parameterType="Long" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM chinacaipu_other_cookbook_detail WHERE id = #{id, jdbcType=BIGINT} 
    </select>

    <select id="selectByQuery" parameterType="com.rulai.spider.bean.query.ChinacaipuOtherCookbookDetailQuery" resultMap="BaseResultMap">
        SELECT
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            FROM chinacaipu_other_cookbook_detail
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM chinacaipu_other_cookbook_detail WHERE id = #{id, jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="Long">
        DELETE FROM chinacaipu_other_cookbook_detail WHERE id = #{id, jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.rulai.spider.bean.query.ChinacaipuOtherCookbookDetailQuery">
        DELETE FROM chinacaipu_other_cookbook_detail
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO chinacaipu_other_cookbook_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_update,
            <if test="cookbookUrl != null">
                cookbook_url,
            </if>
            <if test="cookbookName != null">
                cookbook_name,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="editTime != null">
                edit_time,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="coverPicture != null">
                cover_picture,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            NOW(), NOW(),
            <if test="cookbookUrl != null">
                #{cookbookUrl,jdbcType=VARCHAR},
            </if>
            <if test="cookbookName != null">
                #{cookbookName,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null">
                #{editTime,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="coverPicture != null">
                #{coverPicture,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="batchInsert" parameterType="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO chinacaipu_other_cookbook_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_update,
            <if test="cookbookUrl != null">
                cookbook_url,
            </if>
            <if test="cookbookName != null">
                cookbook_name,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="editTime != null">
                edit_time,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="coverPicture != null">
                cover_picture,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        VALUES
        <foreach collection="records" item="record" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                NOW(), NOW(),
                <if test="cookbookUrl != null">
                    #{record.cookbookUrl,jdbcType=VARCHAR},
                </if>
                <if test="cookbookName != null">
                    #{record.cookbookName,jdbcType=VARCHAR},
                </if>
                <if test="title != null">
                    #{record.title,jdbcType=VARCHAR},
                </if>
                <if test="author != null">
                    #{record.author,jdbcType=VARCHAR},
                </if>
                <if test="editTime != null">
                    #{record.editTime,jdbcType=VARCHAR},
                </if>
                <if test="description != null">
                    #{record.description,jdbcType=VARCHAR},
                </if>
                <if test="coverPicture != null">
                    #{record.coverPicture,jdbcType=VARCHAR},
                </if>
                <if test="detail != null">
                    #{record.detail,jdbcType=VARCHAR},
                </if>
            </trim>
        </foreach>
    </insert>

    <update id="updateByQuerySelective" parameterType="map">
        UPDATE chinacaipu_other_cookbook_detail
        <set>
            gmt_update=now(),
            <if test="record.cookbookUrl != null">
                cookbook_url = #{record.cookbookUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.cookbookName != null">
                cookbook_name = #{record.cookbookName,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.editTime != null">
                edit_time = #{record.editTime,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.coverPicture != null">
                cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
            </if>
            <if test="record.detail != null">
                detail = #{record.detail,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        UPDATE chinacaipu_other_cookbook_detail
        SET
        cookbook_url = #{record.cookbookUrl,jdbcType=VARCHAR},
        cookbook_name = #{record.cookbookName,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        edit_time = #{record.editTime,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
        detail = #{record.detail,jdbcType=VARCHAR},
        gmt_update = NOW()
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO">
        UPDATE chinacaipu_other_cookbook_detail
        <set>
            gmt_update=NOW(),
            <if test="cookbookUrl != null">
                cookbook_url = #{cookbookUrl,jdbcType=VARCHAR},
            </if>
            <if test="cookbookName != null">
                cookbook_name = #{cookbookName,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="coverPicture != null">
                cover_picture = #{coverPicture,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>
    
    <update id="batchUpdateByPrimaryKey" parameterType="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO">
        UPDATE chinacaipu_other_cookbook_detail
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="cookbook_url = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.cookbookUrl, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="cookbook_name = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.cookbookName, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="title = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.title, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="author = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.author, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="edit_time = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.editTime, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="description = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.description, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="cover_picture = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.coverPicture, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="detail = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN #{record.detail, jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="gmt_update = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN NOW()
                </foreach>
            </trim>
        </trim>
        WHERE id IN
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id, jdbcType=BIGINT}
        </foreach>
    </update>
    
    <update id="batchUpdateByPrimaryKeySelective" parameterType="com.rulai.spider.bean.model.ChinacaipuOtherCookbookDetailDO">
        UPDATE chinacaipu_other_cookbook_detail
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="cookbook_url = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.cookbookUrl != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.cookbookUrl, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cookbook_name = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.cookbookName != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.cookbookName, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="title = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.title != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.title, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="author = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.author != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.author, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="edit_time = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.editTime != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.editTime, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="description = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.description != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.description, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cover_picture = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.coverPicture != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.coverPicture, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="detail = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    <if test="record.detail != null">
                        WHEN id = #{record.id, jdbcType=BIGINT} 
                        THEN #{record.detail, jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="gmt_update = CASE" suffix="END,">
                <foreach collection="records" item="record" index="index">
                    WHEN id = #{record.id, jdbcType=BIGINT} 
                    THEN NOW()
                </foreach>
            </trim>
        </trim>
        WHERE id IN
        <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
            #{record.id, jdbcType=BIGINT}
        </foreach>
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
